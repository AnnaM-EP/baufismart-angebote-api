/**
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschlägen zu ermitteln.
 *
 * OpenAPI spec version: 0.1
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * SchufaErgebnis
 */

public class SchufaErgebnis   {
  @JsonProperty("antragstellerUnbekannt")
  private Boolean antragstellerUnbekannt = null;

  @JsonProperty("inManuellerNachbehandlung")
  private Boolean inManuellerNachbehandlung = null;

  @JsonProperty("score")
  private String score = null;

  public SchufaErgebnis antragstellerUnbekannt(Boolean antragstellerUnbekannt) {
    this.antragstellerUnbekannt = antragstellerUnbekannt;
    return this;
  }

   /**
   * Der Antragsteller ist bei der Schufa unbekannt.
   * @return antragstellerUnbekannt
  **/
  @ApiModelProperty(example = "false", value = "Der Antragsteller ist bei der Schufa unbekannt.")
  public Boolean getAntragstellerUnbekannt() {
    return antragstellerUnbekannt;
  }

  public void setAntragstellerUnbekannt(Boolean antragstellerUnbekannt) {
    this.antragstellerUnbekannt = antragstellerUnbekannt;
  }

  public SchufaErgebnis inManuellerNachbehandlung(Boolean inManuellerNachbehandlung) {
    this.inManuellerNachbehandlung = inManuellerNachbehandlung;
    return this;
  }

   /**
   * Die Ermittlung des Schufa-Scores verzögert sich, wenn sich die Anfrage bei der Schufa in manueller Nachbehandlung befindet.
   * @return inManuellerNachbehandlung
  **/
  @ApiModelProperty(example = "false", value = "Die Ermittlung des Schufa-Scores verzögert sich, wenn sich die Anfrage bei der Schufa in manueller Nachbehandlung befindet.")
  public Boolean getInManuellerNachbehandlung() {
    return inManuellerNachbehandlung;
  }

  public void setInManuellerNachbehandlung(Boolean inManuellerNachbehandlung) {
    this.inManuellerNachbehandlung = inManuellerNachbehandlung;
  }

  public SchufaErgebnis score(String score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getScore() {
    return score;
  }

  public void setScore(String score) {
    this.score = score;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchufaErgebnis schufaErgebnis = (SchufaErgebnis) o;
    return Objects.equals(this.antragstellerUnbekannt, schufaErgebnis.antragstellerUnbekannt) &&
        Objects.equals(this.inManuellerNachbehandlung, schufaErgebnis.inManuellerNachbehandlung) &&
        Objects.equals(this.score, schufaErgebnis.score);
  }

  @Override
  public int hashCode() {
    return Objects.hash(antragstellerUnbekannt, inManuellerNachbehandlung, score);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchufaErgebnis {\n");
    
    sb.append("    antragstellerUnbekannt: ").append(toIndentedString(antragstellerUnbekannt)).append("\n");
    sb.append("    inManuellerNachbehandlung: ").append(toIndentedString(inManuellerNachbehandlung)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

