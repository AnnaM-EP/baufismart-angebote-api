/*
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschl√§gen zu ermitteln.
 *
 * OpenAPI spec version: 1.0
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * VermietungsInformationen
 */

public class VermietungsInformationen {
  @JsonProperty("mieteinnahmenNettoKaltMonatlich")
  private BigDecimal mieteinnahmenNettoKaltMonatlich = null;

  /**
   * Gets or Sets nutzungsArt
   */
  public enum NutzungsArtEnum {
    EIGENGENUTZT("EIGENGENUTZT"),
    
    TEIL_VERMIETET("TEIL_VERMIETET"),
    
    VERMIETET("VERMIETET");

    private String value;

    NutzungsArtEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NutzungsArtEnum fromValue(String text) {
      for (NutzungsArtEnum b : NutzungsArtEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("nutzungsArt")
  private NutzungsArtEnum nutzungsArt = null;

  @JsonProperty("vermieteteFlaeche")
  private BigDecimal vermieteteFlaeche = null;

  public VermietungsInformationen mieteinnahmenNettoKaltMonatlich(BigDecimal mieteinnahmenNettoKaltMonatlich) {
    this.mieteinnahmenNettoKaltMonatlich = mieteinnahmenNettoKaltMonatlich;
    return this;
  }

   /**
   * Get mieteinnahmenNettoKaltMonatlich
   * @return mieteinnahmenNettoKaltMonatlich
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMieteinnahmenNettoKaltMonatlich() {
    return mieteinnahmenNettoKaltMonatlich;
  }

  public void setMieteinnahmenNettoKaltMonatlich(BigDecimal mieteinnahmenNettoKaltMonatlich) {
    this.mieteinnahmenNettoKaltMonatlich = mieteinnahmenNettoKaltMonatlich;
  }

  public VermietungsInformationen nutzungsArt(NutzungsArtEnum nutzungsArt) {
    this.nutzungsArt = nutzungsArt;
    return this;
  }

   /**
   * Get nutzungsArt
   * @return nutzungsArt
  **/
  @ApiModelProperty(value = "")
  public NutzungsArtEnum getNutzungsArt() {
    return nutzungsArt;
  }

  public void setNutzungsArt(NutzungsArtEnum nutzungsArt) {
    this.nutzungsArt = nutzungsArt;
  }

  public VermietungsInformationen vermieteteFlaeche(BigDecimal vermieteteFlaeche) {
    this.vermieteteFlaeche = vermieteteFlaeche;
    return this;
  }

   /**
   * Get vermieteteFlaeche
   * @return vermieteteFlaeche
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getVermieteteFlaeche() {
    return vermieteteFlaeche;
  }

  public void setVermieteteFlaeche(BigDecimal vermieteteFlaeche) {
    this.vermieteteFlaeche = vermieteteFlaeche;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VermietungsInformationen vermietungsInformationen = (VermietungsInformationen) o;
    return Objects.equals(this.mieteinnahmenNettoKaltMonatlich, vermietungsInformationen.mieteinnahmenNettoKaltMonatlich) &&
        Objects.equals(this.nutzungsArt, vermietungsInformationen.nutzungsArt) &&
        Objects.equals(this.vermieteteFlaeche, vermietungsInformationen.vermieteteFlaeche);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mieteinnahmenNettoKaltMonatlich, nutzungsArt, vermieteteFlaeche);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VermietungsInformationen {\n");
    
    sb.append("    mieteinnahmenNettoKaltMonatlich: ").append(toIndentedString(mieteinnahmenNettoKaltMonatlich)).append("\n");
    sb.append("    nutzungsArt: ").append(toIndentedString(nutzungsArt)).append("\n");
    sb.append("    vermieteteFlaeche: ").append(toIndentedString(vermieteteFlaeche)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

