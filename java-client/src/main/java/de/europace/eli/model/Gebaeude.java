/**
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschlägen zu ermitteln.
 *
 * OpenAPI spec version: 0.1
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import de.europace.eli.model.GebaeudeFlaeche;
import de.europace.eli.model.Jahreszahl;
import de.europace.eli.model.MiteigentumsAnteil;
import de.europace.eli.model.ModernisierungsAngaben;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Gebaeude
 */

public class Gebaeude   {
  @JsonProperty("anzahlDerGewerbeeinheiten")
  private Integer anzahlDerGewerbeeinheiten = null;

  @JsonProperty("anzahlDerWohneinheitenImGebaeude")
  private Integer anzahlDerWohneinheitenImGebaeude = null;

  @JsonProperty("anzahlVollgeschosse")
  private Integer anzahlVollgeschosse = null;

  @JsonProperty("ausstattung")
  private String ausstattung = null;

  @JsonProperty("baujahr")
  private Jahreszahl baujahr = null;

  @JsonProperty("bauweise")
  private String bauweise = null;

  @JsonProperty("bezeichnungWohneinheit")
  private String bezeichnungWohneinheit = null;

  @JsonProperty("dachgeschossAusbau")
  private String dachgeschossAusbau = null;

  @JsonProperty("einliegerwohnungVorhanden")
  private Boolean einliegerwohnungVorhanden = null;

  @JsonProperty("gewerbeflaeche")
  private GebaeudeFlaeche gewerbeflaeche = null;

  /**
   * Gets or Sets hausAnordnung
   */
  public enum HausAnordnungEnum {
    FREISTEHEND("FREISTEHEND"),
    
    KOPFHAUS("KOPFHAUS"),
    
    MITTELHAUS("MITTELHAUS");

    private String value;

    HausAnordnungEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HausAnordnungEnum fromValue(String text) {
      for (HausAnordnungEnum b : HausAnordnungEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("hausAnordnung")
  private HausAnordnungEnum hausAnordnung = null;

  /**
   * Nur bei ObjektArt == HAUS.
   */
  public enum HausTypEnum {
    DOPPELHAUSHAELFTE("DOPPELHAUSHAELFTE"),
    
    EINFAMILIENHAUS("EINFAMILIENHAUS"),
    
    MEHRFAMILIENHAUS("MEHRFAMILIENHAUS"),
    
    REIHENHAUS("REIHENHAUS"),
    
    ZWEIFAMILIENHAUS("ZWEIFAMILIENHAUS");

    private String value;

    HausTypEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HausTypEnum fromValue(String text) {
      for (HausTypEnum b : HausTypEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("hausTyp")
  private HausTypEnum hausTyp = null;

  @JsonProperty("istFertighaus")
  private Boolean istFertighaus = null;

  @JsonProperty("miteigentumsAnteil")
  private MiteigentumsAnteil miteigentumsAnteil = null;

  @JsonProperty("modernisierungsAngaben")
  private ModernisierungsAngaben modernisierungsAngaben = null;

  @JsonProperty("unterkellerung")
  private String unterkellerung = null;

  @JsonProperty("wohnflaeche")
  private GebaeudeFlaeche wohnflaeche = null;

  public Gebaeude anzahlDerGewerbeeinheiten(Integer anzahlDerGewerbeeinheiten) {
    this.anzahlDerGewerbeeinheiten = anzahlDerGewerbeeinheiten;
    return this;
  }

   /**
   * Nur bei ObjektArt == HAUS.
   * @return anzahlDerGewerbeeinheiten
  **/
  @ApiModelProperty(example = "null", value = "Nur bei ObjektArt == HAUS.")
  public Integer getAnzahlDerGewerbeeinheiten() {
    return anzahlDerGewerbeeinheiten;
  }

  public void setAnzahlDerGewerbeeinheiten(Integer anzahlDerGewerbeeinheiten) {
    this.anzahlDerGewerbeeinheiten = anzahlDerGewerbeeinheiten;
  }

  public Gebaeude anzahlDerWohneinheitenImGebaeude(Integer anzahlDerWohneinheitenImGebaeude) {
    this.anzahlDerWohneinheitenImGebaeude = anzahlDerWohneinheitenImGebaeude;
    return this;
  }

   /**
   * Get anzahlDerWohneinheitenImGebaeude
   * @return anzahlDerWohneinheitenImGebaeude
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getAnzahlDerWohneinheitenImGebaeude() {
    return anzahlDerWohneinheitenImGebaeude;
  }

  public void setAnzahlDerWohneinheitenImGebaeude(Integer anzahlDerWohneinheitenImGebaeude) {
    this.anzahlDerWohneinheitenImGebaeude = anzahlDerWohneinheitenImGebaeude;
  }

  public Gebaeude anzahlVollgeschosse(Integer anzahlVollgeschosse) {
    this.anzahlVollgeschosse = anzahlVollgeschosse;
    return this;
  }

   /**
   * Get anzahlVollgeschosse
   * @return anzahlVollgeschosse
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getAnzahlVollgeschosse() {
    return anzahlVollgeschosse;
  }

  public void setAnzahlVollgeschosse(Integer anzahlVollgeschosse) {
    this.anzahlVollgeschosse = anzahlVollgeschosse;
  }

  public Gebaeude ausstattung(String ausstattung) {
    this.ausstattung = ausstattung;
    return this;
  }

   /**
   * Angaben zur Ausstattung für alle verschiedene Produktanbieter, aber nicht für ING-DiBa. Erlaubte Werte sind: EINFACH,MITTEL,GEHOBEN,STARK_GEHOBEN. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.
   * @return ausstattung
  **/
  @ApiModelProperty(example = "null", value = "Angaben zur Ausstattung für alle verschiedene Produktanbieter, aber nicht für ING-DiBa. Erlaubte Werte sind: EINFACH,MITTEL,GEHOBEN,STARK_GEHOBEN. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.")
  public String getAusstattung() {
    return ausstattung;
  }

  public void setAusstattung(String ausstattung) {
    this.ausstattung = ausstattung;
  }

  public Gebaeude baujahr(Jahreszahl baujahr) {
    this.baujahr = baujahr;
    return this;
  }

   /**
   * Baujahr des Gebäudes. Bei verwendungszweck != NEUBAU; Vierstellige Jahresangabe
   * @return baujahr
  **/
  @ApiModelProperty(example = "null", value = "Baujahr des Gebäudes. Bei verwendungszweck != NEUBAU; Vierstellige Jahresangabe")
  public Jahreszahl getBaujahr() {
    return baujahr;
  }

  public void setBaujahr(Jahreszahl baujahr) {
    this.baujahr = baujahr;
  }

  public Gebaeude bauweise(String bauweise) {
    this.bauweise = bauweise;
    return this;
  }

   /**
   * Erlaubte Werte sind: FACHWERK_MIT_STROH_LEHM,FACHWERK_MIT_ZIEGELN,GLAS_STAHL,HOLZ,MASSIV. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.
   * @return bauweise
  **/
  @ApiModelProperty(example = "null", value = "Erlaubte Werte sind: FACHWERK_MIT_STROH_LEHM,FACHWERK_MIT_ZIEGELN,GLAS_STAHL,HOLZ,MASSIV. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.")
  public String getBauweise() {
    return bauweise;
  }

  public void setBauweise(String bauweise) {
    this.bauweise = bauweise;
  }

  public Gebaeude bezeichnungWohneinheit(String bezeichnungWohneinheit) {
    this.bezeichnungWohneinheit = bezeichnungWohneinheit;
    return this;
  }

   /**
   * Nur bei ObjektArt == EIGENTUMSWOHNUNG.
   * @return bezeichnungWohneinheit
  **/
  @ApiModelProperty(example = "null", value = "Nur bei ObjektArt == EIGENTUMSWOHNUNG.")
  public String getBezeichnungWohneinheit() {
    return bezeichnungWohneinheit;
  }

  public void setBezeichnungWohneinheit(String bezeichnungWohneinheit) {
    this.bezeichnungWohneinheit = bezeichnungWohneinheit;
  }

  public Gebaeude dachgeschossAusbau(String dachgeschossAusbau) {
    this.dachgeschossAusbau = dachgeschossAusbau;
    return this;
  }

   /**
   * Nur bei ObjektArt == HAUS. Erlaubte Werte sind: FLACHDACH,NICHT_AUSGEBAUT,TEILWEISE_AUSGEBAUT,VOLL_AUSGEBAUT. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.
   * @return dachgeschossAusbau
  **/
  @ApiModelProperty(example = "null", value = "Nur bei ObjektArt == HAUS. Erlaubte Werte sind: FLACHDACH,NICHT_AUSGEBAUT,TEILWEISE_AUSGEBAUT,VOLL_AUSGEBAUT. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.")
  public String getDachgeschossAusbau() {
    return dachgeschossAusbau;
  }

  public void setDachgeschossAusbau(String dachgeschossAusbau) {
    this.dachgeschossAusbau = dachgeschossAusbau;
  }

  public Gebaeude einliegerwohnungVorhanden(Boolean einliegerwohnungVorhanden) {
    this.einliegerwohnungVorhanden = einliegerwohnungVorhanden;
    return this;
  }

   /**
   * Nur bei ObjektArt == HAUS.
   * @return einliegerwohnungVorhanden
  **/
  @ApiModelProperty(example = "false", value = "Nur bei ObjektArt == HAUS.")
  public Boolean getEinliegerwohnungVorhanden() {
    return einliegerwohnungVorhanden;
  }

  public void setEinliegerwohnungVorhanden(Boolean einliegerwohnungVorhanden) {
    this.einliegerwohnungVorhanden = einliegerwohnungVorhanden;
  }

  public Gebaeude gewerbeflaeche(GebaeudeFlaeche gewerbeflaeche) {
    this.gewerbeflaeche = gewerbeflaeche;
    return this;
  }

   /**
   * Get gewerbeflaeche
   * @return gewerbeflaeche
  **/
  @ApiModelProperty(example = "null", value = "")
  public GebaeudeFlaeche getGewerbeflaeche() {
    return gewerbeflaeche;
  }

  public void setGewerbeflaeche(GebaeudeFlaeche gewerbeflaeche) {
    this.gewerbeflaeche = gewerbeflaeche;
  }

  public Gebaeude hausAnordnung(HausAnordnungEnum hausAnordnung) {
    this.hausAnordnung = hausAnordnung;
    return this;
  }

   /**
   * Get hausAnordnung
   * @return hausAnordnung
  **/
  @ApiModelProperty(example = "null", value = "")
  public HausAnordnungEnum getHausAnordnung() {
    return hausAnordnung;
  }

  public void setHausAnordnung(HausAnordnungEnum hausAnordnung) {
    this.hausAnordnung = hausAnordnung;
  }

  public Gebaeude hausTyp(HausTypEnum hausTyp) {
    this.hausTyp = hausTyp;
    return this;
  }

   /**
   * Nur bei ObjektArt == HAUS.
   * @return hausTyp
  **/
  @ApiModelProperty(example = "null", value = "Nur bei ObjektArt == HAUS.")
  public HausTypEnum getHausTyp() {
    return hausTyp;
  }

  public void setHausTyp(HausTypEnum hausTyp) {
    this.hausTyp = hausTyp;
  }

  public Gebaeude istFertighaus(Boolean istFertighaus) {
    this.istFertighaus = istFertighaus;
    return this;
  }

   /**
   * Nur bei ObjektArt == HAUS.
   * @return istFertighaus
  **/
  @ApiModelProperty(example = "false", value = "Nur bei ObjektArt == HAUS.")
  public Boolean getIstFertighaus() {
    return istFertighaus;
  }

  public void setIstFertighaus(Boolean istFertighaus) {
    this.istFertighaus = istFertighaus;
  }

  public Gebaeude miteigentumsAnteil(MiteigentumsAnteil miteigentumsAnteil) {
    this.miteigentumsAnteil = miteigentumsAnteil;
    return this;
  }

   /**
   * Nur bei ObjektArt == EIGENTUMSWOHNUNG.
   * @return miteigentumsAnteil
  **/
  @ApiModelProperty(example = "null", value = "Nur bei ObjektArt == EIGENTUMSWOHNUNG.")
  public MiteigentumsAnteil getMiteigentumsAnteil() {
    return miteigentumsAnteil;
  }

  public void setMiteigentumsAnteil(MiteigentumsAnteil miteigentumsAnteil) {
    this.miteigentumsAnteil = miteigentumsAnteil;
  }

  public Gebaeude modernisierungsAngaben(ModernisierungsAngaben modernisierungsAngaben) {
    this.modernisierungsAngaben = modernisierungsAngaben;
    return this;
  }

   /**
   * Get modernisierungsAngaben
   * @return modernisierungsAngaben
  **/
  @ApiModelProperty(example = "null", value = "")
  public ModernisierungsAngaben getModernisierungsAngaben() {
    return modernisierungsAngaben;
  }

  public void setModernisierungsAngaben(ModernisierungsAngaben modernisierungsAngaben) {
    this.modernisierungsAngaben = modernisierungsAngaben;
  }

  public Gebaeude unterkellerung(String unterkellerung) {
    this.unterkellerung = unterkellerung;
    return this;
  }

   /**
   * Nur bei ObjektArt == HAUS. Erlaubte Werte sind: NICHT_UNTERKELLERT,TEILWEISE_UNTERKELLERT,UNTERKELLERT. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.
   * @return unterkellerung
  **/
  @ApiModelProperty(example = "null", value = "Nur bei ObjektArt == HAUS. Erlaubte Werte sind: NICHT_UNTERKELLERT,TEILWEISE_UNTERKELLERT,UNTERKELLERT. Neue Ausprägungen können kurzfristig hinzukommen. Der Client muss daher mit unbekannten Werten umgehen können.")
  public String getUnterkellerung() {
    return unterkellerung;
  }

  public void setUnterkellerung(String unterkellerung) {
    this.unterkellerung = unterkellerung;
  }

  public Gebaeude wohnflaeche(GebaeudeFlaeche wohnflaeche) {
    this.wohnflaeche = wohnflaeche;
    return this;
  }

   /**
   * Get wohnflaeche
   * @return wohnflaeche
  **/
  @ApiModelProperty(example = "null", value = "")
  public GebaeudeFlaeche getWohnflaeche() {
    return wohnflaeche;
  }

  public void setWohnflaeche(GebaeudeFlaeche wohnflaeche) {
    this.wohnflaeche = wohnflaeche;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Gebaeude gebaeude = (Gebaeude) o;
    return Objects.equals(this.anzahlDerGewerbeeinheiten, gebaeude.anzahlDerGewerbeeinheiten) &&
        Objects.equals(this.anzahlDerWohneinheitenImGebaeude, gebaeude.anzahlDerWohneinheitenImGebaeude) &&
        Objects.equals(this.anzahlVollgeschosse, gebaeude.anzahlVollgeschosse) &&
        Objects.equals(this.ausstattung, gebaeude.ausstattung) &&
        Objects.equals(this.baujahr, gebaeude.baujahr) &&
        Objects.equals(this.bauweise, gebaeude.bauweise) &&
        Objects.equals(this.bezeichnungWohneinheit, gebaeude.bezeichnungWohneinheit) &&
        Objects.equals(this.dachgeschossAusbau, gebaeude.dachgeschossAusbau) &&
        Objects.equals(this.einliegerwohnungVorhanden, gebaeude.einliegerwohnungVorhanden) &&
        Objects.equals(this.gewerbeflaeche, gebaeude.gewerbeflaeche) &&
        Objects.equals(this.hausAnordnung, gebaeude.hausAnordnung) &&
        Objects.equals(this.hausTyp, gebaeude.hausTyp) &&
        Objects.equals(this.istFertighaus, gebaeude.istFertighaus) &&
        Objects.equals(this.miteigentumsAnteil, gebaeude.miteigentumsAnteil) &&
        Objects.equals(this.modernisierungsAngaben, gebaeude.modernisierungsAngaben) &&
        Objects.equals(this.unterkellerung, gebaeude.unterkellerung) &&
        Objects.equals(this.wohnflaeche, gebaeude.wohnflaeche);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anzahlDerGewerbeeinheiten, anzahlDerWohneinheitenImGebaeude, anzahlVollgeschosse, ausstattung, baujahr, bauweise, bezeichnungWohneinheit, dachgeschossAusbau, einliegerwohnungVorhanden, gewerbeflaeche, hausAnordnung, hausTyp, istFertighaus, miteigentumsAnteil, modernisierungsAngaben, unterkellerung, wohnflaeche);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Gebaeude {\n");
    
    sb.append("    anzahlDerGewerbeeinheiten: ").append(toIndentedString(anzahlDerGewerbeeinheiten)).append("\n");
    sb.append("    anzahlDerWohneinheitenImGebaeude: ").append(toIndentedString(anzahlDerWohneinheitenImGebaeude)).append("\n");
    sb.append("    anzahlVollgeschosse: ").append(toIndentedString(anzahlVollgeschosse)).append("\n");
    sb.append("    ausstattung: ").append(toIndentedString(ausstattung)).append("\n");
    sb.append("    baujahr: ").append(toIndentedString(baujahr)).append("\n");
    sb.append("    bauweise: ").append(toIndentedString(bauweise)).append("\n");
    sb.append("    bezeichnungWohneinheit: ").append(toIndentedString(bezeichnungWohneinheit)).append("\n");
    sb.append("    dachgeschossAusbau: ").append(toIndentedString(dachgeschossAusbau)).append("\n");
    sb.append("    einliegerwohnungVorhanden: ").append(toIndentedString(einliegerwohnungVorhanden)).append("\n");
    sb.append("    gewerbeflaeche: ").append(toIndentedString(gewerbeflaeche)).append("\n");
    sb.append("    hausAnordnung: ").append(toIndentedString(hausAnordnung)).append("\n");
    sb.append("    hausTyp: ").append(toIndentedString(hausTyp)).append("\n");
    sb.append("    istFertighaus: ").append(toIndentedString(istFertighaus)).append("\n");
    sb.append("    miteigentumsAnteil: ").append(toIndentedString(miteigentumsAnteil)).append("\n");
    sb.append("    modernisierungsAngaben: ").append(toIndentedString(modernisierungsAngaben)).append("\n");
    sb.append("    unterkellerung: ").append(toIndentedString(unterkellerung)).append("\n");
    sb.append("    wohnflaeche: ").append(toIndentedString(wohnflaeche)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

