/**
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschl√§gen zu ermitteln.
 *
 * OpenAPI spec version: 0.1
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;


/**
 * ZwischenFinanzierungsWunsch
 */

public class ZwischenFinanzierungsWunsch   {
  @JsonProperty("darlehensBetrag")
  private BigDecimal darlehensBetrag = null;

  @JsonProperty("detailsZurVerwendung")
  private String detailsZurVerwendung = null;

  @JsonProperty("maximaleLaufzeitInMonaten")
  private Integer maximaleLaufzeitInMonaten = null;

  @JsonProperty("provision")
  private BigDecimal provision = null;

  /**
   * Gets or Sets verwendungszweck
   */
  public enum VerwendungszweckEnum {
    VORFINANZIERUNG_OEFFENTLICHER_MITTEL("VORFINANZIERUNG_OEFFENTLICHER_MITTEL"),
    
    VERKAUF_EINES_ANDEREN_OBJEKTS("VERKAUF_EINES_ANDEREN_OBJEKTS"),
    
    SONSTIGE_VERWENDUNG("SONSTIGE_VERWENDUNG");

    private String value;

    VerwendungszweckEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VerwendungszweckEnum fromValue(String text) {
      for (VerwendungszweckEnum b : VerwendungszweckEnum.values()) {
          if (String.valueOf(b.value).equals(text)) {
              return b;
          }
      }
      return null;
    }
  }

  @JsonProperty("verwendungszweck")
  private VerwendungszweckEnum verwendungszweck = null;

  public ZwischenFinanzierungsWunsch darlehensBetrag(BigDecimal darlehensBetrag) {
    this.darlehensBetrag = darlehensBetrag;
    return this;
  }

   /**
   * Get darlehensBetrag
   * @return darlehensBetrag
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getDarlehensBetrag() {
    return darlehensBetrag;
  }

  public void setDarlehensBetrag(BigDecimal darlehensBetrag) {
    this.darlehensBetrag = darlehensBetrag;
  }

  public ZwischenFinanzierungsWunsch detailsZurVerwendung(String detailsZurVerwendung) {
    this.detailsZurVerwendung = detailsZurVerwendung;
    return this;
  }

   /**
   * Get detailsZurVerwendung
   * @return detailsZurVerwendung
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDetailsZurVerwendung() {
    return detailsZurVerwendung;
  }

  public void setDetailsZurVerwendung(String detailsZurVerwendung) {
    this.detailsZurVerwendung = detailsZurVerwendung;
  }

  public ZwischenFinanzierungsWunsch maximaleLaufzeitInMonaten(Integer maximaleLaufzeitInMonaten) {
    this.maximaleLaufzeitInMonaten = maximaleLaufzeitInMonaten;
    return this;
  }

   /**
   * Get maximaleLaufzeitInMonaten
   * @return maximaleLaufzeitInMonaten
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaximaleLaufzeitInMonaten() {
    return maximaleLaufzeitInMonaten;
  }

  public void setMaximaleLaufzeitInMonaten(Integer maximaleLaufzeitInMonaten) {
    this.maximaleLaufzeitInMonaten = maximaleLaufzeitInMonaten;
  }

  public ZwischenFinanzierungsWunsch provision(BigDecimal provision) {
    this.provision = provision;
    return this;
  }

   /**
   * Get provision
   * @return provision
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getProvision() {
    return provision;
  }

  public void setProvision(BigDecimal provision) {
    this.provision = provision;
  }

  public ZwischenFinanzierungsWunsch verwendungszweck(VerwendungszweckEnum verwendungszweck) {
    this.verwendungszweck = verwendungszweck;
    return this;
  }

   /**
   * Get verwendungszweck
   * @return verwendungszweck
  **/
  @ApiModelProperty(example = "null", value = "")
  public VerwendungszweckEnum getVerwendungszweck() {
    return verwendungszweck;
  }

  public void setVerwendungszweck(VerwendungszweckEnum verwendungszweck) {
    this.verwendungszweck = verwendungszweck;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZwischenFinanzierungsWunsch zwischenFinanzierungsWunsch = (ZwischenFinanzierungsWunsch) o;
    return Objects.equals(this.darlehensBetrag, zwischenFinanzierungsWunsch.darlehensBetrag) &&
        Objects.equals(this.detailsZurVerwendung, zwischenFinanzierungsWunsch.detailsZurVerwendung) &&
        Objects.equals(this.maximaleLaufzeitInMonaten, zwischenFinanzierungsWunsch.maximaleLaufzeitInMonaten) &&
        Objects.equals(this.provision, zwischenFinanzierungsWunsch.provision) &&
        Objects.equals(this.verwendungszweck, zwischenFinanzierungsWunsch.verwendungszweck);
  }

  @Override
  public int hashCode() {
    return Objects.hash(darlehensBetrag, detailsZurVerwendung, maximaleLaufzeitInMonaten, provision, verwendungszweck);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZwischenFinanzierungsWunsch {\n");
    
    sb.append("    darlehensBetrag: ").append(toIndentedString(darlehensBetrag)).append("\n");
    sb.append("    detailsZurVerwendung: ").append(toIndentedString(detailsZurVerwendung)).append("\n");
    sb.append("    maximaleLaufzeitInMonaten: ").append(toIndentedString(maximaleLaufzeitInMonaten)).append("\n");
    sb.append("    provision: ").append(toIndentedString(provision)).append("\n");
    sb.append("    verwendungszweck: ").append(toIndentedString(verwendungszweck)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

