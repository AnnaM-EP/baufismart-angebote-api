/*
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschl√§gen zu ermitteln.
 *
 * OpenAPI spec version: 0.1
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import de.europace.eli.model.Bankverbindung;
import de.europace.eli.model.FinanzierungsObjekt;
import de.europace.eli.model.Haushalt;
import de.europace.eli.model.LeadTracking;
import de.europace.eli.model.Partner;
import de.europace.eli.model.Vorhaben;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.LocalDate;

/**
 * Vorgang
 */

public class Vorgang {
  @JsonProperty("bankverbindung")
  private Bankverbindung bankverbindung = null;

  /**
   * Gets or Sets datenKontext
   */
  public enum DatenKontextEnum {
    TEST_MODUS("TEST_MODUS"),
    
    ECHT_GESCHAEFT("ECHT_GESCHAEFT");

    private String value;

    DatenKontextEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DatenKontextEnum fromValue(String text) {
      for (DatenKontextEnum b : DatenKontextEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("datenKontext")
  private DatenKontextEnum datenKontext = null;

  @JsonProperty("erstelltAm")
  private LocalDate erstelltAm = null;

  @JsonProperty("externeVorgangsNummer")
  private String externeVorgangsNummer = null;

  @JsonProperty("finanzierungsObjekt")
  private FinanzierungsObjekt finanzierungsObjekt = null;

  @JsonProperty("haushalte")
  private List<Haushalt> haushalte = new ArrayList<Haushalt>();

  @JsonProperty("kundenBetreuer")
  private Partner kundenBetreuer = null;

  @JsonProperty("leadTracking")
  private LeadTracking leadTracking = null;

  @JsonProperty("tippGeber")
  private Partner tippGeber = null;

  @JsonProperty("vorgangsBearbeiter")
  private Partner vorgangsBearbeiter = null;

  @JsonProperty("vorgangsNummer")
  private String vorgangsNummer = null;

  @JsonProperty("vorhaben")
  private Vorhaben vorhaben = null;

  public Vorgang bankverbindung(Bankverbindung bankverbindung) {
    this.bankverbindung = bankverbindung;
    return this;
  }

   /**
   * Get bankverbindung
   * @return bankverbindung
  **/
  @ApiModelProperty(example = "null", value = "")
  public Bankverbindung getBankverbindung() {
    return bankverbindung;
  }

  public void setBankverbindung(Bankverbindung bankverbindung) {
    this.bankverbindung = bankverbindung;
  }

  public Vorgang datenKontext(DatenKontextEnum datenKontext) {
    this.datenKontext = datenKontext;
    return this;
  }

   /**
   * Get datenKontext
   * @return datenKontext
  **/
  @ApiModelProperty(example = "null", value = "")
  public DatenKontextEnum getDatenKontext() {
    return datenKontext;
  }

  public void setDatenKontext(DatenKontextEnum datenKontext) {
    this.datenKontext = datenKontext;
  }

  public Vorgang erstelltAm(LocalDate erstelltAm) {
    this.erstelltAm = erstelltAm;
    return this;
  }

   /**
   * Get erstelltAm
   * @return erstelltAm
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getErstelltAm() {
    return erstelltAm;
  }

  public void setErstelltAm(LocalDate erstelltAm) {
    this.erstelltAm = erstelltAm;
  }

  public Vorgang externeVorgangsNummer(String externeVorgangsNummer) {
    this.externeVorgangsNummer = externeVorgangsNummer;
    return this;
  }

   /**
   * Get externeVorgangsNummer
   * @return externeVorgangsNummer
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getExterneVorgangsNummer() {
    return externeVorgangsNummer;
  }

  public void setExterneVorgangsNummer(String externeVorgangsNummer) {
    this.externeVorgangsNummer = externeVorgangsNummer;
  }

  public Vorgang finanzierungsObjekt(FinanzierungsObjekt finanzierungsObjekt) {
    this.finanzierungsObjekt = finanzierungsObjekt;
    return this;
  }

   /**
   * Get finanzierungsObjekt
   * @return finanzierungsObjekt
  **/
  @ApiModelProperty(example = "null", value = "")
  public FinanzierungsObjekt getFinanzierungsObjekt() {
    return finanzierungsObjekt;
  }

  public void setFinanzierungsObjekt(FinanzierungsObjekt finanzierungsObjekt) {
    this.finanzierungsObjekt = finanzierungsObjekt;
  }

  public Vorgang haushalte(List<Haushalt> haushalte) {
    this.haushalte = haushalte;
    return this;
  }

  public Vorgang addHaushalteItem(Haushalt haushalteItem) {
    this.haushalte.add(haushalteItem);
    return this;
  }

   /**
   * Get haushalte
   * @return haushalte
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Haushalt> getHaushalte() {
    return haushalte;
  }

  public void setHaushalte(List<Haushalt> haushalte) {
    this.haushalte = haushalte;
  }

  public Vorgang kundenBetreuer(Partner kundenBetreuer) {
    this.kundenBetreuer = kundenBetreuer;
    return this;
  }

   /**
   * Get kundenBetreuer
   * @return kundenBetreuer
  **/
  @ApiModelProperty(example = "null", value = "")
  public Partner getKundenBetreuer() {
    return kundenBetreuer;
  }

  public void setKundenBetreuer(Partner kundenBetreuer) {
    this.kundenBetreuer = kundenBetreuer;
  }

  public Vorgang leadTracking(LeadTracking leadTracking) {
    this.leadTracking = leadTracking;
    return this;
  }

   /**
   * Get leadTracking
   * @return leadTracking
  **/
  @ApiModelProperty(example = "null", value = "")
  public LeadTracking getLeadTracking() {
    return leadTracking;
  }

  public void setLeadTracking(LeadTracking leadTracking) {
    this.leadTracking = leadTracking;
  }

  public Vorgang tippGeber(Partner tippGeber) {
    this.tippGeber = tippGeber;
    return this;
  }

   /**
   * Get tippGeber
   * @return tippGeber
  **/
  @ApiModelProperty(example = "null", value = "")
  public Partner getTippGeber() {
    return tippGeber;
  }

  public void setTippGeber(Partner tippGeber) {
    this.tippGeber = tippGeber;
  }

  public Vorgang vorgangsBearbeiter(Partner vorgangsBearbeiter) {
    this.vorgangsBearbeiter = vorgangsBearbeiter;
    return this;
  }

   /**
   * Get vorgangsBearbeiter
   * @return vorgangsBearbeiter
  **/
  @ApiModelProperty(example = "null", value = "")
  public Partner getVorgangsBearbeiter() {
    return vorgangsBearbeiter;
  }

  public void setVorgangsBearbeiter(Partner vorgangsBearbeiter) {
    this.vorgangsBearbeiter = vorgangsBearbeiter;
  }

  public Vorgang vorgangsNummer(String vorgangsNummer) {
    this.vorgangsNummer = vorgangsNummer;
    return this;
  }

   /**
   * Get vorgangsNummer
   * @return vorgangsNummer
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getVorgangsNummer() {
    return vorgangsNummer;
  }

  public void setVorgangsNummer(String vorgangsNummer) {
    this.vorgangsNummer = vorgangsNummer;
  }

  public Vorgang vorhaben(Vorhaben vorhaben) {
    this.vorhaben = vorhaben;
    return this;
  }

   /**
   * Get vorhaben
   * @return vorhaben
  **/
  @ApiModelProperty(example = "null", value = "")
  public Vorhaben getVorhaben() {
    return vorhaben;
  }

  public void setVorhaben(Vorhaben vorhaben) {
    this.vorhaben = vorhaben;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vorgang vorgang = (Vorgang) o;
    return Objects.equals(this.bankverbindung, vorgang.bankverbindung) &&
        Objects.equals(this.datenKontext, vorgang.datenKontext) &&
        Objects.equals(this.erstelltAm, vorgang.erstelltAm) &&
        Objects.equals(this.externeVorgangsNummer, vorgang.externeVorgangsNummer) &&
        Objects.equals(this.finanzierungsObjekt, vorgang.finanzierungsObjekt) &&
        Objects.equals(this.haushalte, vorgang.haushalte) &&
        Objects.equals(this.kundenBetreuer, vorgang.kundenBetreuer) &&
        Objects.equals(this.leadTracking, vorgang.leadTracking) &&
        Objects.equals(this.tippGeber, vorgang.tippGeber) &&
        Objects.equals(this.vorgangsBearbeiter, vorgang.vorgangsBearbeiter) &&
        Objects.equals(this.vorgangsNummer, vorgang.vorgangsNummer) &&
        Objects.equals(this.vorhaben, vorgang.vorhaben);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankverbindung, datenKontext, erstelltAm, externeVorgangsNummer, finanzierungsObjekt, haushalte, kundenBetreuer, leadTracking, tippGeber, vorgangsBearbeiter, vorgangsNummer, vorhaben);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vorgang {\n");
    
    sb.append("    bankverbindung: ").append(toIndentedString(bankverbindung)).append("\n");
    sb.append("    datenKontext: ").append(toIndentedString(datenKontext)).append("\n");
    sb.append("    erstelltAm: ").append(toIndentedString(erstelltAm)).append("\n");
    sb.append("    externeVorgangsNummer: ").append(toIndentedString(externeVorgangsNummer)).append("\n");
    sb.append("    finanzierungsObjekt: ").append(toIndentedString(finanzierungsObjekt)).append("\n");
    sb.append("    haushalte: ").append(toIndentedString(haushalte)).append("\n");
    sb.append("    kundenBetreuer: ").append(toIndentedString(kundenBetreuer)).append("\n");
    sb.append("    leadTracking: ").append(toIndentedString(leadTracking)).append("\n");
    sb.append("    tippGeber: ").append(toIndentedString(tippGeber)).append("\n");
    sb.append("    vorgangsBearbeiter: ").append(toIndentedString(vorgangsBearbeiter)).append("\n");
    sb.append("    vorgangsNummer: ").append(toIndentedString(vorgangsNummer)).append("\n");
    sb.append("    vorhaben: ").append(toIndentedString(vorhaben)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

