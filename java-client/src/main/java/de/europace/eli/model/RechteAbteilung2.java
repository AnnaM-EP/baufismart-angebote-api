/*
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschl√§gen zu ermitteln.
 *
 * OpenAPI spec version: 1.0
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * RechteAbteilung2
 */

public class RechteAbteilung2 {
  @JsonProperty("beschreibung")
  private String beschreibung = null;

  @JsonProperty("betrag")
  private BigDecimal betrag = null;

  @JsonProperty("vorhanden")
  private Boolean vorhanden = null;

  public RechteAbteilung2 beschreibung(String beschreibung) {
    this.beschreibung = beschreibung;
    return this;
  }

   /**
   * Get beschreibung
   * @return beschreibung
  **/
  @ApiModelProperty(value = "")
  public String getBeschreibung() {
    return beschreibung;
  }

  public void setBeschreibung(String beschreibung) {
    this.beschreibung = beschreibung;
  }

  public RechteAbteilung2 betrag(BigDecimal betrag) {
    this.betrag = betrag;
    return this;
  }

   /**
   * Get betrag
   * @return betrag
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getBetrag() {
    return betrag;
  }

  public void setBetrag(BigDecimal betrag) {
    this.betrag = betrag;
  }

  public RechteAbteilung2 vorhanden(Boolean vorhanden) {
    this.vorhanden = vorhanden;
    return this;
  }

   /**
   * Get vorhanden
   * @return vorhanden
  **/
  @ApiModelProperty(value = "")
  public Boolean getVorhanden() {
    return vorhanden;
  }

  public void setVorhanden(Boolean vorhanden) {
    this.vorhanden = vorhanden;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RechteAbteilung2 rechteAbteilung2 = (RechteAbteilung2) o;
    return Objects.equals(this.beschreibung, rechteAbteilung2.beschreibung) &&
        Objects.equals(this.betrag, rechteAbteilung2.betrag) &&
        Objects.equals(this.vorhanden, rechteAbteilung2.vorhanden);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beschreibung, betrag, vorhanden);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RechteAbteilung2 {\n");
    
    sb.append("    beschreibung: ").append(toIndentedString(beschreibung)).append("\n");
    sb.append("    betrag: ").append(toIndentedString(betrag)).append("\n");
    sb.append("    vorhanden: ").append(toIndentedString(vorhanden)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

