/*
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschl√§gen zu ermitteln.
 *
 * OpenAPI spec version: 1.0
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ModernisierungsAngaben
 */

public class ModernisierungsAngaben {
  @JsonProperty("badWc")
  private Boolean badWc = null;

  @JsonProperty("bodenWandTreppe")
  private Boolean bodenWandTreppe = null;

  @JsonProperty("dach")
  private Boolean dach = null;

  @JsonProperty("fenster")
  private Boolean fenster = null;

  @JsonProperty("heizungZentral")
  private Boolean heizungZentral = null;

  /**
   * Gets or Sets modernisierungsGrad
   */
  public enum ModernisierungsGradEnum {
    GERING("GERING"),
    
    MITTEL("MITTEL"),
    
    HOCH("HOCH");

    private String value;

    ModernisierungsGradEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModernisierungsGradEnum fromValue(String text) {
      for (ModernisierungsGradEnum b : ModernisierungsGradEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("modernisierungsGrad")
  private ModernisierungsGradEnum modernisierungsGrad = null;

  @JsonProperty("modernisierungsJahr")
  private String modernisierungsJahr = null;

  @JsonProperty("raumaufteilung")
  private Boolean raumaufteilung = null;

  @JsonProperty("stromAbwasserHeizkoerper")
  private Boolean stromAbwasserHeizkoerper = null;

  @JsonProperty("waermedaemmung")
  private Boolean waermedaemmung = null;

  @JsonProperty("wurdeModernisiert")
  private Boolean wurdeModernisiert = null;

  public ModernisierungsAngaben badWc(Boolean badWc) {
    this.badWc = badWc;
    return this;
  }

   /**
   * Get badWc
   * @return badWc
  **/
  @ApiModelProperty(value = "")
  public Boolean getBadWc() {
    return badWc;
  }

  public void setBadWc(Boolean badWc) {
    this.badWc = badWc;
  }

  public ModernisierungsAngaben bodenWandTreppe(Boolean bodenWandTreppe) {
    this.bodenWandTreppe = bodenWandTreppe;
    return this;
  }

   /**
   * Get bodenWandTreppe
   * @return bodenWandTreppe
  **/
  @ApiModelProperty(value = "")
  public Boolean getBodenWandTreppe() {
    return bodenWandTreppe;
  }

  public void setBodenWandTreppe(Boolean bodenWandTreppe) {
    this.bodenWandTreppe = bodenWandTreppe;
  }

  public ModernisierungsAngaben dach(Boolean dach) {
    this.dach = dach;
    return this;
  }

   /**
   * Get dach
   * @return dach
  **/
  @ApiModelProperty(value = "")
  public Boolean getDach() {
    return dach;
  }

  public void setDach(Boolean dach) {
    this.dach = dach;
  }

  public ModernisierungsAngaben fenster(Boolean fenster) {
    this.fenster = fenster;
    return this;
  }

   /**
   * Get fenster
   * @return fenster
  **/
  @ApiModelProperty(value = "")
  public Boolean getFenster() {
    return fenster;
  }

  public void setFenster(Boolean fenster) {
    this.fenster = fenster;
  }

  public ModernisierungsAngaben heizungZentral(Boolean heizungZentral) {
    this.heizungZentral = heizungZentral;
    return this;
  }

   /**
   * Get heizungZentral
   * @return heizungZentral
  **/
  @ApiModelProperty(value = "")
  public Boolean getHeizungZentral() {
    return heizungZentral;
  }

  public void setHeizungZentral(Boolean heizungZentral) {
    this.heizungZentral = heizungZentral;
  }

  public ModernisierungsAngaben modernisierungsGrad(ModernisierungsGradEnum modernisierungsGrad) {
    this.modernisierungsGrad = modernisierungsGrad;
    return this;
  }

   /**
   * Get modernisierungsGrad
   * @return modernisierungsGrad
  **/
  @ApiModelProperty(value = "")
  public ModernisierungsGradEnum getModernisierungsGrad() {
    return modernisierungsGrad;
  }

  public void setModernisierungsGrad(ModernisierungsGradEnum modernisierungsGrad) {
    this.modernisierungsGrad = modernisierungsGrad;
  }

  public ModernisierungsAngaben modernisierungsJahr(String modernisierungsJahr) {
    this.modernisierungsJahr = modernisierungsJahr;
    return this;
  }

   /**
   * Jahr der Modernisierung der Immobilie
   * @return modernisierungsJahr
  **/
  @ApiModelProperty(example = "2016", value = "Jahr der Modernisierung der Immobilie")
  public String getModernisierungsJahr() {
    return modernisierungsJahr;
  }

  public void setModernisierungsJahr(String modernisierungsJahr) {
    this.modernisierungsJahr = modernisierungsJahr;
  }

  public ModernisierungsAngaben raumaufteilung(Boolean raumaufteilung) {
    this.raumaufteilung = raumaufteilung;
    return this;
  }

   /**
   * Get raumaufteilung
   * @return raumaufteilung
  **/
  @ApiModelProperty(value = "")
  public Boolean getRaumaufteilung() {
    return raumaufteilung;
  }

  public void setRaumaufteilung(Boolean raumaufteilung) {
    this.raumaufteilung = raumaufteilung;
  }

  public ModernisierungsAngaben stromAbwasserHeizkoerper(Boolean stromAbwasserHeizkoerper) {
    this.stromAbwasserHeizkoerper = stromAbwasserHeizkoerper;
    return this;
  }

   /**
   * Get stromAbwasserHeizkoerper
   * @return stromAbwasserHeizkoerper
  **/
  @ApiModelProperty(value = "")
  public Boolean getStromAbwasserHeizkoerper() {
    return stromAbwasserHeizkoerper;
  }

  public void setStromAbwasserHeizkoerper(Boolean stromAbwasserHeizkoerper) {
    this.stromAbwasserHeizkoerper = stromAbwasserHeizkoerper;
  }

  public ModernisierungsAngaben waermedaemmung(Boolean waermedaemmung) {
    this.waermedaemmung = waermedaemmung;
    return this;
  }

   /**
   * Get waermedaemmung
   * @return waermedaemmung
  **/
  @ApiModelProperty(value = "")
  public Boolean getWaermedaemmung() {
    return waermedaemmung;
  }

  public void setWaermedaemmung(Boolean waermedaemmung) {
    this.waermedaemmung = waermedaemmung;
  }

  public ModernisierungsAngaben wurdeModernisiert(Boolean wurdeModernisiert) {
    this.wurdeModernisiert = wurdeModernisiert;
    return this;
  }

   /**
   * Get wurdeModernisiert
   * @return wurdeModernisiert
  **/
  @ApiModelProperty(value = "")
  public Boolean getWurdeModernisiert() {
    return wurdeModernisiert;
  }

  public void setWurdeModernisiert(Boolean wurdeModernisiert) {
    this.wurdeModernisiert = wurdeModernisiert;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModernisierungsAngaben modernisierungsAngaben = (ModernisierungsAngaben) o;
    return Objects.equals(this.badWc, modernisierungsAngaben.badWc) &&
        Objects.equals(this.bodenWandTreppe, modernisierungsAngaben.bodenWandTreppe) &&
        Objects.equals(this.dach, modernisierungsAngaben.dach) &&
        Objects.equals(this.fenster, modernisierungsAngaben.fenster) &&
        Objects.equals(this.heizungZentral, modernisierungsAngaben.heizungZentral) &&
        Objects.equals(this.modernisierungsGrad, modernisierungsAngaben.modernisierungsGrad) &&
        Objects.equals(this.modernisierungsJahr, modernisierungsAngaben.modernisierungsJahr) &&
        Objects.equals(this.raumaufteilung, modernisierungsAngaben.raumaufteilung) &&
        Objects.equals(this.stromAbwasserHeizkoerper, modernisierungsAngaben.stromAbwasserHeizkoerper) &&
        Objects.equals(this.waermedaemmung, modernisierungsAngaben.waermedaemmung) &&
        Objects.equals(this.wurdeModernisiert, modernisierungsAngaben.wurdeModernisiert);
  }

  @Override
  public int hashCode() {
    return Objects.hash(badWc, bodenWandTreppe, dach, fenster, heizungZentral, modernisierungsGrad, modernisierungsJahr, raumaufteilung, stromAbwasserHeizkoerper, waermedaemmung, wurdeModernisiert);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModernisierungsAngaben {\n");
    
    sb.append("    badWc: ").append(toIndentedString(badWc)).append("\n");
    sb.append("    bodenWandTreppe: ").append(toIndentedString(bodenWandTreppe)).append("\n");
    sb.append("    dach: ").append(toIndentedString(dach)).append("\n");
    sb.append("    fenster: ").append(toIndentedString(fenster)).append("\n");
    sb.append("    heizungZentral: ").append(toIndentedString(heizungZentral)).append("\n");
    sb.append("    modernisierungsGrad: ").append(toIndentedString(modernisierungsGrad)).append("\n");
    sb.append("    modernisierungsJahr: ").append(toIndentedString(modernisierungsJahr)).append("\n");
    sb.append("    raumaufteilung: ").append(toIndentedString(raumaufteilung)).append("\n");
    sb.append("    stromAbwasserHeizkoerper: ").append(toIndentedString(stromAbwasserHeizkoerper)).append("\n");
    sb.append("    waermedaemmung: ").append(toIndentedString(waermedaemmung)).append("\n");
    sb.append("    wurdeModernisiert: ").append(toIndentedString(wurdeModernisiert)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

