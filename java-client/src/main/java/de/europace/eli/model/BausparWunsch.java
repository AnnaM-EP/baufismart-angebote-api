/*
 * Ergebnislisten API
 * Ein Service um eine Ergebnisliste mit Finanzierungsvorschl√§gen zu ermitteln.
 *
 * OpenAPI spec version: 1.0
 * Contact: helpdesk@europace2.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.europace.eli.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

/**
 * BausparWunsch
 */

public class BausparWunsch {
  /**
   * Gets or Sets abschlussGebuehrenVerrechnung
   */
  public enum AbschlussGebuehrenVerrechnungEnum {
    SOFORTZAHLUNG("SOFORTZAHLUNG"),
    
    VERRECHNUNG("VERRECHNUNG");

    private String value;

    AbschlussGebuehrenVerrechnungEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AbschlussGebuehrenVerrechnungEnum fromValue(String text) {
      for (AbschlussGebuehrenVerrechnungEnum b : AbschlussGebuehrenVerrechnungEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("abschlussGebuehrenVerrechnung")
  private AbschlussGebuehrenVerrechnungEnum abschlussGebuehrenVerrechnung = null;

  @JsonProperty("bausparSummeAbsolut")
  private BigDecimal bausparSummeAbsolut = null;

  @JsonProperty("bausparSummeRelativ")
  private BigDecimal bausparSummeRelativ = null;

  /**
   * Gets or Sets bausparTarife
   */
  public enum BausparTarifeEnum {
    FUCHS_IMMO_1("FUCHS_IMMO_1"),
    
    FUCHS_IMMO_2("FUCHS_IMMO_2"),
    
    FUCHS_IMMO_3("FUCHS_IMMO_3"),
    
    FUCHS_IMMO_4("FUCHS_IMMO_4"),
    
    LBS_HT_CLASSIC_S_2015("LBS_HT_CLASSIC_S_2015"),
    
    LBS_HT_CLASSIC_F_2015("LBS_HT_CLASSIC_F_2015"),
    
    LBS_HT_CLASSIC_L_2015("LBS_HT_CLASSIC_L_2015"),
    
    LBS_HT_CLASSIC_N_2015("LBS_HT_CLASSIC_N_2015"),
    
    LBS_OST_CLASSIC15_F5("LBS_OST_CLASSIC15_F5"),
    
    LBS_OST_CLASSIC_F_H4("LBS_OST_CLASSIC_F_H4"),
    
    LBS_OST_CLASSIC_F_H5("LBS_OST_CLASSIC_F_H5"),
    
    LBS_OST_CLASSIC_12_C4("LBS_OST_CLASSIC_12_C4"),
    
    LBS_OST_CLASSIC_12_C9("LBS_OST_CLASSIC_12_C9"),
    
    LBS_OST_CLASSIC15_F3("LBS_OST_CLASSIC15_F3"),
    
    LBS_OST_CLASSIC15_F4("LBS_OST_CLASSIC15_F4"),
    
    LBS_OST_CLASSIC15_F6("LBS_OST_CLASSIC15_F6"),
    
    LBS_OST_CLASSIC15_F8("LBS_OST_CLASSIC15_F8"),
    
    LBS_OST_VARIO_FLEX("LBS_OST_VARIO_FLEX"),
    
    LBS_SHH_PRIMUS_SC("LBS_SHH_PRIMUS_SC"),
    
    LBS_SHH_PRIMUS_SH("LBS_SHH_PRIMUS_SH"),
    
    LBS_SHH_PRIMUS_SI("LBS_SHH_PRIMUS_SI"),
    
    LBS_SHH_PRIMUS_SJ("LBS_SHH_PRIMUS_SJ"),
    
    LBS_SHH_TREND_SD("LBS_SHH_TREND_SD"),
    
    LBS_SHH_PRIMUS_SD("LBS_SHH_PRIMUS_SD"),
    
    LBS_WEST_ZUHAUSE_DIREKT_10("LBS_WEST_ZUHAUSE_DIREKT_10"),
    
    LBS_WEST_ZUHAUSE_DIREKT_15("LBS_WEST_ZUHAUSE_DIREKT_15"),
    
    LBS_WEST_ZUHAUSE_PLUS("LBS_WEST_ZUHAUSE_PLUS"),
    
    LBS_WEST_ZUHAUSE_FLEX_4_L("LBS_WEST_ZUHAUSE_FLEX_4_L"),
    
    LBS_WEST_ZUHAUSE_FLEX_5_L("LBS_WEST_ZUHAUSE_FLEX_5_L"),
    
    LBS_WEST_ZUHAUSE_FLEX_6_L("LBS_WEST_ZUHAUSE_FLEX_6_L"),
    
    LBS_WEST_ZUHAUSE_FLEX_8_L("LBS_WEST_ZUHAUSE_FLEX_8_L"),
    
    SIGNAL_IDUNA_FREIRAUM_F_30("SIGNAL_IDUNA_FREIRAUM_F_30"),
    
    SIGNAL_IDUNA_FREIRAUM_F_35("SIGNAL_IDUNA_FREIRAUM_F_35"),
    
    SIGNAL_IDUNA_FREIRAUM_F_40("SIGNAL_IDUNA_FREIRAUM_F_40"),
    
    SIGNAL_IDUNA_FREIRAUM_F_45("SIGNAL_IDUNA_FREIRAUM_F_45"),
    
    SIGNAL_IDUNA_FREIRAUM_F_50("SIGNAL_IDUNA_FREIRAUM_F_50"),
    
    SIGNAL_IDUNA_FREIRAUM_F_60("SIGNAL_IDUNA_FREIRAUM_F_60"),
    
    SIGNAL_IDUNA_FREIRAUM_F_30_MZ("SIGNAL_IDUNA_FREIRAUM_F_30_MZ"),
    
    SIGNAL_IDUNA_FREIRAUM_F_35_MZ("SIGNAL_IDUNA_FREIRAUM_F_35_MZ"),
    
    SIGNAL_IDUNA_FREIRAUM_F_40_MZ("SIGNAL_IDUNA_FREIRAUM_F_40_MZ"),
    
    SIGNAL_IDUNA_FREIRAUM_F_45_MZ("SIGNAL_IDUNA_FREIRAUM_F_45_MZ"),
    
    SIGNAL_IDUNA_FREIRAUM_F_50_MZ("SIGNAL_IDUNA_FREIRAUM_F_50_MZ"),
    
    SIGNAL_IDUNA_FREIRAUM_F_60_MZ("SIGNAL_IDUNA_FREIRAUM_F_60_MZ"),
    
    BHW_TARIF_FI1("BHW_TARIF_FI1"),
    
    BHW_TARIF_FI1N("BHW_TARIF_FI1N"),
    
    BHW_TARIF_FI2("BHW_TARIF_FI2"),
    
    BHW_TARIF_FI2N("BHW_TARIF_FI2N"),
    
    BHW_TARIF_FI3("BHW_TARIF_FI3"),
    
    BHW_TARIF_FI4("BHW_TARIF_FI4"),
    
    BHW_TARIF_FX1("BHW_TARIF_FX1"),
    
    BHW_TARIF_FX1N("BHW_TARIF_FX1N"),
    
    BHW_TARIF_FX2("BHW_TARIF_FX2"),
    
    BHW_TARIF_FX2N("BHW_TARIF_FX2N"),
    
    BHW_TARIF_REN("BHW_TARIF_REN"),
    
    DT_RING_TARIF_FT("DT_RING_TARIF_FT"),
    
    DT_RING_TARIF_FT_0("DT_RING_TARIF_FT_0"),
    
    DT_RING_TARIF_FT_1("DT_RING_TARIF_FT_1"),
    
    DT_RING_TARIF_FT_2("DT_RING_TARIF_FT_2"),
    
    DT_RING_TARIF_XT_0("DT_RING_TARIF_XT_0"),
    
    DT_RING_TARIF_XT_1("DT_RING_TARIF_XT_1"),
    
    ALTE_LEIPZIGER_1502("ALTE_LEIPZIGER_1502"),
    
    ALTE_LEIPZIGER_1602("ALTE_LEIPZIGER_1602"),
    
    ALTE_LEIPZIGER_1702("ALTE_LEIPZIGER_1702"),
    
    ALTE_LEIPZIGER_1802("ALTE_LEIPZIGER_1802"),
    
    ALTE_LEIPZIGER_1902("ALTE_LEIPZIGER_1902"),
    
    ALTE_LEIPZIGER_2002("ALTE_LEIPZIGER_2002"),
    
    ALTE_LEIPZIGER_1502_MZ("ALTE_LEIPZIGER_1502_MZ"),
    
    ALTE_LEIPZIGER_1602_MZ("ALTE_LEIPZIGER_1602_MZ"),
    
    ALTE_LEIPZIGER_1702_MZ("ALTE_LEIPZIGER_1702_MZ"),
    
    ALTE_LEIPZIGER_1802_MZ("ALTE_LEIPZIGER_1802_MZ"),
    
    ALTE_LEIPZIGER_1902_MZ("ALTE_LEIPZIGER_1902_MZ"),
    
    ALTE_LEIPZIGER_2002_MZ("ALTE_LEIPZIGER_2002_MZ"),
    
    ALTE_LEIPZIGER_1503("ALTE_LEIPZIGER_1503"),
    
    ALTE_LEIPZIGER_1603("ALTE_LEIPZIGER_1603"),
    
    ALTE_LEIPZIGER_1703("ALTE_LEIPZIGER_1703"),
    
    ALTE_LEIPZIGER_1803("ALTE_LEIPZIGER_1803"),
    
    ALTE_LEIPZIGER_1903("ALTE_LEIPZIGER_1903"),
    
    ALTE_LEIPZIGER_2003("ALTE_LEIPZIGER_2003"),
    
    ALTE_LEIPZIGER_1503_MZ("ALTE_LEIPZIGER_1503_MZ"),
    
    ALTE_LEIPZIGER_1603_MZ("ALTE_LEIPZIGER_1603_MZ"),
    
    ALTE_LEIPZIGER_1703_MZ("ALTE_LEIPZIGER_1703_MZ"),
    
    ALTE_LEIPZIGER_1803_MZ("ALTE_LEIPZIGER_1803_MZ"),
    
    ALTE_LEIPZIGER_1903_MZ("ALTE_LEIPZIGER_1903_MZ"),
    
    ALTE_LEIPZIGER_2003_MZ("ALTE_LEIPZIGER_2003_MZ"),
    
    ALTE_LEIPZIGER_150X("ALTE_LEIPZIGER_150X"),
    
    ALTE_LEIPZIGER_160X("ALTE_LEIPZIGER_160X"),
    
    ALTE_LEIPZIGER_170X("ALTE_LEIPZIGER_170X"),
    
    ALTE_LEIPZIGER_180X("ALTE_LEIPZIGER_180X"),
    
    ALTE_LEIPZIGER_190X("ALTE_LEIPZIGER_190X"),
    
    ALTE_LEIPZIGER_200X("ALTE_LEIPZIGER_200X"),
    
    ALTE_LEIPZIGER_150X_MZ("ALTE_LEIPZIGER_150X_MZ"),
    
    ALTE_LEIPZIGER_160X_MZ("ALTE_LEIPZIGER_160X_MZ"),
    
    ALTE_LEIPZIGER_170X_MZ("ALTE_LEIPZIGER_170X_MZ"),
    
    ALTE_LEIPZIGER_180X_MZ("ALTE_LEIPZIGER_180X_MZ"),
    
    ALTE_LEIPZIGER_190X_MZ("ALTE_LEIPZIGER_190X_MZ"),
    
    ALTE_LEIPZIGER_200X_MZ("ALTE_LEIPZIGER_200X_MZ"),
    
    BKM_MAX_PREMIUM_OPTIMAL("BKM_MAX_PREMIUM_OPTIMAL"),
    
    BKM_MAX_PREMIUM_NIEDRIGE_SPARRATE("BKM_MAX_PREMIUM_NIEDRIGE_SPARRATE"),
    
    BKM_MAX_PREMIUM_NIEDRIGE_TILGUNG("BKM_MAX_PREMIUM_NIEDRIGE_TILGUNG"),
    
    BKM_MAX_PREMIUM_BESTER_ZINS("BKM_MAX_PREMIUM_BESTER_ZINS"),
    
    WUESTENROT_01063_4("WUESTENROT_01063_4"),
    
    WUESTENROT_01063_5("WUESTENROT_01063_5"),
    
    WUESTENROT_01063_6("WUESTENROT_01063_6"),
    
    WUESTENROT_01063_7("WUESTENROT_01063_7"),
    
    WUESTENROT_01063_8("WUESTENROT_01063_8"),
    
    WUESTENROT_01063_9("WUESTENROT_01063_9"),
    
    WUESTENROT_01063_10("WUESTENROT_01063_10"),
    
    WUESTENROT_01063_12("WUESTENROT_01063_12"),
    
    WUESTENROT_01064_4("WUESTENROT_01064_4"),
    
    WUESTENROT_01064_6("WUESTENROT_01064_6"),
    
    WUESTENROT_01064_8("WUESTENROT_01064_8"),
    
    WUESTENROT_01064_10("WUESTENROT_01064_10"),
    
    WUESTENROT_01064_12("WUESTENROT_01064_12"),
    
    WUESTENROT_01061_10("WUESTENROT_01061_10"),
    
    WUESTENROT_01062_4("WUESTENROT_01062_4");

    private String value;

    BausparTarifeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BausparTarifeEnum fromValue(String text) {
      for (BausparTarifeEnum b : BausparTarifeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("bausparTarife")
  private List<BausparTarifeEnum> bausparTarife = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("sonderZahlungEinmalig")
  private BigDecimal sonderZahlungEinmalig = null;

  @JsonProperty("sparBeitragMonatlichAbsolut")
  private BigDecimal sparBeitragMonatlichAbsolut = null;

  @JsonProperty("sparBeitragMonatlichRelativ")
  private BigDecimal sparBeitragMonatlichRelativ = null;

  @JsonProperty("tilgungsBeitragMonatlich")
  private BigDecimal tilgungsBeitragMonatlich = null;

  @JsonProperty("vertragsPartnerIds")
  private List<String> vertragsPartnerIds = null;

  /**
   * Gets or Sets verwendung
   */
  public enum VerwendungEnum {
    ZINS_ABSICHERUNG("ZINS_ABSICHERUNG"),
    
    TILGUNGS_AUSGESETZT("TILGUNGS_AUSGESETZT");

    private String value;

    VerwendungEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VerwendungEnum fromValue(String text) {
      for (VerwendungEnum b : VerwendungEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("verwendung")
  private VerwendungEnum verwendung = null;

  @JsonProperty("zuteilungsDatum")
  private LocalDate zuteilungsDatum = null;

  public BausparWunsch abschlussGebuehrenVerrechnung(AbschlussGebuehrenVerrechnungEnum abschlussGebuehrenVerrechnung) {
    this.abschlussGebuehrenVerrechnung = abschlussGebuehrenVerrechnung;
    return this;
  }

   /**
   * Get abschlussGebuehrenVerrechnung
   * @return abschlussGebuehrenVerrechnung
  **/
  @ApiModelProperty(value = "")
  public AbschlussGebuehrenVerrechnungEnum getAbschlussGebuehrenVerrechnung() {
    return abschlussGebuehrenVerrechnung;
  }

  public void setAbschlussGebuehrenVerrechnung(AbschlussGebuehrenVerrechnungEnum abschlussGebuehrenVerrechnung) {
    this.abschlussGebuehrenVerrechnung = abschlussGebuehrenVerrechnung;
  }

  public BausparWunsch bausparSummeAbsolut(BigDecimal bausparSummeAbsolut) {
    this.bausparSummeAbsolut = bausparSummeAbsolut;
    return this;
  }

   /**
   * Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.
   * @return bausparSummeAbsolut
  **/
  @ApiModelProperty(value = "Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.")
  public BigDecimal getBausparSummeAbsolut() {
    return bausparSummeAbsolut;
  }

  public void setBausparSummeAbsolut(BigDecimal bausparSummeAbsolut) {
    this.bausparSummeAbsolut = bausparSummeAbsolut;
  }

  public BausparWunsch bausparSummeRelativ(BigDecimal bausparSummeRelativ) {
    this.bausparSummeRelativ = bausparSummeRelativ;
    return this;
  }

   /**
   * Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.
   * @return bausparSummeRelativ
  **/
  @ApiModelProperty(value = "Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.")
  public BigDecimal getBausparSummeRelativ() {
    return bausparSummeRelativ;
  }

  public void setBausparSummeRelativ(BigDecimal bausparSummeRelativ) {
    this.bausparSummeRelativ = bausparSummeRelativ;
  }

  public BausparWunsch bausparTarife(List<BausparTarifeEnum> bausparTarife) {
    this.bausparTarife = bausparTarife;
    return this;
  }

  public BausparWunsch addBausparTarifeItem(BausparTarifeEnum bausparTarifeItem) {
    if (this.bausparTarife == null) {
      this.bausparTarife = new ArrayList<BausparTarifeEnum>();
    }
    this.bausparTarife.add(bausparTarifeItem);
    return this;
  }

   /**
   * siehe weitere Beschreibung unter Weitere Informationen -&gt; Bezeichnung Bauspartarife
   * @return bausparTarife
  **/
  @ApiModelProperty(value = "siehe weitere Beschreibung unter Weitere Informationen -> Bezeichnung Bauspartarife")
  public List<BausparTarifeEnum> getBausparTarife() {
    return bausparTarife;
  }

  public void setBausparTarife(List<BausparTarifeEnum> bausparTarife) {
    this.bausparTarife = bausparTarife;
  }

  public BausparWunsch id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Zur Referenzierung an anderer Stelle notwendig. Wenn nicht angegeben, dann wird dieses Feld automatisch bef√ºllt.
   * @return id
  **/
  @ApiModelProperty(value = "Zur Referenzierung an anderer Stelle notwendig. Wenn nicht angegeben, dann wird dieses Feld automatisch bef√ºllt.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BausparWunsch sonderZahlungEinmalig(BigDecimal sonderZahlungEinmalig) {
    this.sonderZahlungEinmalig = sonderZahlungEinmalig;
    return this;
  }

   /**
   * Get sonderZahlungEinmalig
   * @return sonderZahlungEinmalig
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getSonderZahlungEinmalig() {
    return sonderZahlungEinmalig;
  }

  public void setSonderZahlungEinmalig(BigDecimal sonderZahlungEinmalig) {
    this.sonderZahlungEinmalig = sonderZahlungEinmalig;
  }

  public BausparWunsch sparBeitragMonatlichAbsolut(BigDecimal sparBeitragMonatlichAbsolut) {
    this.sparBeitragMonatlichAbsolut = sparBeitragMonatlichAbsolut;
    return this;
  }

   /**
   * Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.
   * @return sparBeitragMonatlichAbsolut
  **/
  @ApiModelProperty(value = "Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.")
  public BigDecimal getSparBeitragMonatlichAbsolut() {
    return sparBeitragMonatlichAbsolut;
  }

  public void setSparBeitragMonatlichAbsolut(BigDecimal sparBeitragMonatlichAbsolut) {
    this.sparBeitragMonatlichAbsolut = sparBeitragMonatlichAbsolut;
  }

  public BausparWunsch sparBeitragMonatlichRelativ(BigDecimal sparBeitragMonatlichRelativ) {
    this.sparBeitragMonatlichRelativ = sparBeitragMonatlichRelativ;
    return this;
  }

   /**
   * Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.
   * @return sparBeitragMonatlichRelativ
  **/
  @ApiModelProperty(value = "Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.")
  public BigDecimal getSparBeitragMonatlichRelativ() {
    return sparBeitragMonatlichRelativ;
  }

  public void setSparBeitragMonatlichRelativ(BigDecimal sparBeitragMonatlichRelativ) {
    this.sparBeitragMonatlichRelativ = sparBeitragMonatlichRelativ;
  }

  public BausparWunsch tilgungsBeitragMonatlich(BigDecimal tilgungsBeitragMonatlich) {
    this.tilgungsBeitragMonatlich = tilgungsBeitragMonatlich;
    return this;
  }

   /**
   * Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.
   * @return tilgungsBeitragMonatlich
  **/
  @ApiModelProperty(value = "Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.")
  public BigDecimal getTilgungsBeitragMonatlich() {
    return tilgungsBeitragMonatlich;
  }

  public void setTilgungsBeitragMonatlich(BigDecimal tilgungsBeitragMonatlich) {
    this.tilgungsBeitragMonatlich = tilgungsBeitragMonatlich;
  }

  public BausparWunsch vertragsPartnerIds(List<String> vertragsPartnerIds) {
    this.vertragsPartnerIds = vertragsPartnerIds;
    return this;
  }

  public BausparWunsch addVertragsPartnerIdsItem(String vertragsPartnerIdsItem) {
    if (this.vertragsPartnerIds == null) {
      this.vertragsPartnerIds = new ArrayList<String>();
    }
    this.vertragsPartnerIds.add(vertragsPartnerIdsItem);
    return this;
  }

   /**
   * Get vertragsPartnerIds
   * @return vertragsPartnerIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getVertragsPartnerIds() {
    return vertragsPartnerIds;
  }

  public void setVertragsPartnerIds(List<String> vertragsPartnerIds) {
    this.vertragsPartnerIds = vertragsPartnerIds;
  }

  public BausparWunsch verwendung(VerwendungEnum verwendung) {
    this.verwendung = verwendung;
    return this;
  }

   /**
   * Get verwendung
   * @return verwendung
  **/
  @ApiModelProperty(value = "")
  public VerwendungEnum getVerwendung() {
    return verwendung;
  }

  public void setVerwendung(VerwendungEnum verwendung) {
    this.verwendung = verwendung;
  }

  public BausparWunsch zuteilungsDatum(LocalDate zuteilungsDatum) {
    this.zuteilungsDatum = zuteilungsDatum;
    return this;
  }

   /**
   * Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.
   * @return zuteilungsDatum
  **/
  @ApiModelProperty(value = "Von den Feldern bausparSummeAbsolut, bausparSummeRelativ, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich und zuteilungsDatum k√∂nnen maximal zwei bef√ºllt werden.")
  public LocalDate getZuteilungsDatum() {
    return zuteilungsDatum;
  }

  public void setZuteilungsDatum(LocalDate zuteilungsDatum) {
    this.zuteilungsDatum = zuteilungsDatum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BausparWunsch bausparWunsch = (BausparWunsch) o;
    return Objects.equals(this.abschlussGebuehrenVerrechnung, bausparWunsch.abschlussGebuehrenVerrechnung) &&
        Objects.equals(this.bausparSummeAbsolut, bausparWunsch.bausparSummeAbsolut) &&
        Objects.equals(this.bausparSummeRelativ, bausparWunsch.bausparSummeRelativ) &&
        Objects.equals(this.bausparTarife, bausparWunsch.bausparTarife) &&
        Objects.equals(this.id, bausparWunsch.id) &&
        Objects.equals(this.sonderZahlungEinmalig, bausparWunsch.sonderZahlungEinmalig) &&
        Objects.equals(this.sparBeitragMonatlichAbsolut, bausparWunsch.sparBeitragMonatlichAbsolut) &&
        Objects.equals(this.sparBeitragMonatlichRelativ, bausparWunsch.sparBeitragMonatlichRelativ) &&
        Objects.equals(this.tilgungsBeitragMonatlich, bausparWunsch.tilgungsBeitragMonatlich) &&
        Objects.equals(this.vertragsPartnerIds, bausparWunsch.vertragsPartnerIds) &&
        Objects.equals(this.verwendung, bausparWunsch.verwendung) &&
        Objects.equals(this.zuteilungsDatum, bausparWunsch.zuteilungsDatum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abschlussGebuehrenVerrechnung, bausparSummeAbsolut, bausparSummeRelativ, bausparTarife, id, sonderZahlungEinmalig, sparBeitragMonatlichAbsolut, sparBeitragMonatlichRelativ, tilgungsBeitragMonatlich, vertragsPartnerIds, verwendung, zuteilungsDatum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BausparWunsch {\n");
    
    sb.append("    abschlussGebuehrenVerrechnung: ").append(toIndentedString(abschlussGebuehrenVerrechnung)).append("\n");
    sb.append("    bausparSummeAbsolut: ").append(toIndentedString(bausparSummeAbsolut)).append("\n");
    sb.append("    bausparSummeRelativ: ").append(toIndentedString(bausparSummeRelativ)).append("\n");
    sb.append("    bausparTarife: ").append(toIndentedString(bausparTarife)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sonderZahlungEinmalig: ").append(toIndentedString(sonderZahlungEinmalig)).append("\n");
    sb.append("    sparBeitragMonatlichAbsolut: ").append(toIndentedString(sparBeitragMonatlichAbsolut)).append("\n");
    sb.append("    sparBeitragMonatlichRelativ: ").append(toIndentedString(sparBeitragMonatlichRelativ)).append("\n");
    sb.append("    tilgungsBeitragMonatlich: ").append(toIndentedString(tilgungsBeitragMonatlich)).append("\n");
    sb.append("    vertragsPartnerIds: ").append(toIndentedString(vertragsPartnerIds)).append("\n");
    sb.append("    verwendung: ").append(toIndentedString(verwendung)).append("\n");
    sb.append("    zuteilungsDatum: ").append(toIndentedString(zuteilungsDatum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

